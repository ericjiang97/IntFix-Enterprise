<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IBwKIJoc9RvzC+shmjkNbQAAAABJRU5ErkJggg==
</value>
  </data>
</root>