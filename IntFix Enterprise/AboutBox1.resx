<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAVeSURBVHhe7ZzJS+RAFIfnH3TfFxBRQbyIB8WLIiIeBAU3
        xAUVVzyIeFPUq0dF3PDiivuKiAguNfxqpoZgpztl052e5P0KPkqTvIS896XSnU7yKycnRxG5UADhUADh
        UADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADh
        UADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUADhUIAkkZubq/Ly8jzBcm7xfkEB
        kkR2drbKysrSvfNvt2lu8X5BARKMOaLLy8tVXV2dJ7W1taqgoCBiPX5BARIMBMBRvbe3pz4+PtTr66t6
        e3tzBfM+Pz9Vb2+vyszMVPn5+a7rTCYUIAlAgJubGzUzM6MqKipUTU2Nqq6ujqCyslJdXFyoyclJChAm
        IMDV1ZUaGBhQ6enp+n83UPSTkxMKEDZQ3OvrazU8PKw/6OEc7/atAMudnp5qATIyMihAWDACDA0NRT2y
        IQTkoAAhJB4BeAr4j0GxvHAuTwFCxPfixsIsy1NAiEAx3aa7YZblCBAC8CkdBZqfn1fHx8fq8PBQ925g
        3tHRkWpvb9cxiOcIEHCMAAcHB8q2TU9P64IjniNAwDEF2traUl9fX/qyLno33t/fdT82NkYBwoIZAba3
        t/XRjWv20ZqZNz4+TgHCAgUQDgUQDgUIGSgoEmwDimMKRAFCApKNJNuACzkcAUICEo2CdnZ2qrm5Of1d
        fXZ2NgLcvIF+ampKVVVV6VjEUYAAgySjR2IfHx91kWxaX1+fLggFCDhGANyQcX5+rguFizbo3TDzuru7
        dXH8FICXgpOAU4DLy0tdJFyxi9ZMIXt6enwXgCNAEqAA3lAAR6MAIYMCeBM4AZA4fEe3gQJ4EzgBUBQk
        zgYTQwGiExgBzNGMJ20aGxtVQ0NDTOrr61VxcbGOoQDRCYwAGNKRsI2NDZ1smzY4OKgTCxEogDuBGgFQ
        EDx0iRarILh7B80UhAJEJ1AjAAqys7Ojk21TkNHRUQrgQeBOAbu7uzrZNgUx9+gVFRVRgCgEbgSIRwCO
        ANGhAI5GAXwECUBRbcCyJmEUILGkTAAkFwmwActDBPwdVgHE/ByMHUePu25aWlpUc3OzJ2VlZTqOp4DE
        47sA2Ens7PLysk6aTcOtXIihAIknpQKgGOaxKjfMvIWFBR1DARJPykcAm8TiCV3EUIDEQwEczcRRgCRC
        Af5AASgABUCzSSwFSB4UwNFMXKIEGBkZ0esoLCyMuLppin12diZbgFhv3jC/6zsFMAXxikPv/DkY7+RF
        Q7G+L28w85wC4A0haDbbM8JhP/GqWDxhlJaWptflBl4ji3cMiRRgbW1NJ9amLS4u/hPgJ+/smZiY+CfA
        3d3d36nerb+/XxcI29vf3/871bvhuUIjwO3trVpaWlJNTU2qra1Ntba2RoCrnA8PDzpOzKVg7CSSi6t7
        T09PujBIghuYh2f6cC41BVldXbWKQ9/V1aXjsM3NzU3PuPv7ew2KY7a3srLy4+1hP9fX19XLy4t6fn7W
        vRuYh3V3dHToOJwavucr2fgugAE7W1paqkpKSjxxxuHDUzxxkMAmDqOFMy7e7WH/MA03o2CdsXDG+U3K
        BCD/BykVAEeXDYmIc5sfDWfcT2LjiQHOOL/hCCAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAc
        CiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAcCiAc
        CiAcCiAcCiAcCiAcCiAcCiCaHPUb8wvrIZo5DW0AAAAASUVORK5CYII=
</value>
  </data>
</root>